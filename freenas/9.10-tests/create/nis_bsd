#!/usr/bin/env bash
# Author: Kris Moore
# License: BSD
# Location for tests into REST API of FreeNAS
# Resty Docs: https://github.com/micha/resty
# jsawk: https://github.com/micha/jsawk

# List the other modules which must be run before this module can execute
REQUIRES="storage"
export REQUIRES

nis_bsd_tests()
{
  # define variables
  local SERVER="${NISSERVER}"
  local DOMAIN="${NISDOMAIN}"
  local DATASET="nis-bsd"
  local NIS_PATH="/mnt/tank/${DATASET}"

  # Set the group text and number of tests
  set_test_group_text "1 - Create - nis_bsd test class" "12"
  CLASSNAME=ixbuild.resty.functional.create.nis_bsd

  # skip if variable are not present
  if [ -z "$NISSERVER" -o -z "$NISDOMAIN" ] ; then
    echo -n "MISSING the NISSERVER / NISDOMAIN settings, test skipped.."
    echo_skipped
    add_xml_result "skipped" "skipped due to missing NIS settings"
    return 0
  fi

  echo_test_title "Setting NIS domain.."
  rest_request "PUT" "/directoryservice/nis/" '{ "nis_domain": "'${NISDOMAIN}'" }'
  check_rest_response "200"

  echo_test_title "Setting NIS server.."
  rest_request "PUT" "/directoryservice/nis/" '{ "nis_servers": "'${NISSERVER}'" }'
  check_rest_response "200"
 
  echo_test_title "Enabling NIS service.."
  rest_request "PUT" "/directoryservice/nis/" '{ "nis_enable": true }'
  check_rest_response "200"

  echo_test_title "Checking if NIS service is enable.."
  rest_request "GET" "/directoryservice/nis/"
  check_property_value "return this.nis_enable" "true" || return 1
  
  echo_test_title "Creating NIS dataset"
  rest_request "POST" "/storage/volume/tank/datasets/" '{ "name": "'"${DATASET}"'" }'
  check_rest_response "201 Created"

  echo_test_title "Enabling secure mode.."
  rest_request "PUT" "/directoryservice/nis/" '{ "nis_secure_mode": true }'
  check_rest_response "200"

  echo_test_title "Checking if secure mode is enable.."
  rest_request "GET" "/directoryservice/nis/"
  check_property_value "return this.nis_secure_mode" "true" || return 1

  echo_test_title "Disabling secure mode.."
  rest_request "PUT" "/directoryservice/nis/" '{ "nis_secure_mode": false }'
  check_rest_response "200"

  echo_test_title "Enabling manycast.."
  rest_request "PUT" "/directoryservice/nis/" '{ "nis_manycast": true }'
  check_rest_response "200"

  echo_test_title "Checking if manycast is enable.."
  rest_request "GET" "/directoryservice/nis/"
  check_property_value "return this.nis_manycast" "true" || return 1

  echo_test_title "Disabling manycast.."
  rest_request "PUT" "/directoryservice/nis/" '{ "nis_manycast": false }'
  check_rest_response "200"

  echo_test_title "Disabling NIS service.."
  rest_request "PUT" "/directoryservice/nis/" '{ "nis_enable": false }'
  check_rest_response "200"

}

# Init function, this is called after module is sourced
# Pre-Set variables
# TESTSET = ( SMOKE / COMPLETE / BENCHMARK )
nis_bsd_init()
{
  # Run all the tests
  case $TESTSET in
        SMOKE) nis_bsd_tests ; return $? ;;
     COMPLETE) nis_bsd_tests ; return $? ;;
    BENCHMARK) ;;
            *) nis_bsd_tests ; return $? ;;
  esac
}

