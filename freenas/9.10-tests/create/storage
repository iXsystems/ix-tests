#!/usr/bin/env bash
# Author: Kris Moore
# License: BSD
# Location for tests into REST API of FreeNAS 9.10
# Resty Docs: https://github.com/micha/resty
# jsawk: https://github.com/micha/jsawk

# List the other modules which must be run before this module can execute
REQUIRES="system"
export REQUIRES

storage_tests()
{
  # Set the group text and number of tests
  set_test_group_text "1 - Create - Storage tests" "46"
  CLASSNAME=ixbuild.resty.functional.create.storage

  # Set the default VMBACKEND
  if [ -z "$VMBACKEND" ] ; then
    VMBACKEND="vbox"
    echo "No virtual machine backend specified, defaulting to '${VMBACKEND}'."
  fi

  # Determine which VM backend to use for storage
  case ${VMBACKEND} in
    esxi)
      export disk1="da0"
      export disk2="da1"
      ;;
    vbox|bhyve)
      export disk1="ada1"
      export disk2="ada2"
      ;;
  esac

  # Check getting disks
  echo_test_title "Disks / API functionality"
  rest_request "GET" "/storage/disk/"
  check_rest_response "200 OK" || return 1

  # Check creating a zpool
  echo_test_title "Creating volume"
  rest_request "POST" "/storage/volume/" '{ "volume_name" : "'${IXBUILD_ROOT_ZVOL}'", "layout" : [ { "vdevtype" : "stripe", "disks" : [ "'${disk1}'", "'${disk2}'" ] } ] }'
  check_rest_response "201 Created" || return 1

  # Check creating a dataset 01/20 /share
  echo_test_title "Creating dataset 01/20 ${IXBUILD_ROOT_ZVOL}/share"
  rest_request "POST" "/storage/volume/${IXBUILD_ROOT_ZVOL}/datasets/" '{ "name": "share" }'
  check_rest_response "201 Created" || return 1

  # Check creating a dataset 02/20 /jails
  echo_test_title "Creating dataset 02/20 ${IXBUILD_ROOT_ZVOL}/jails"
  rest_request "POST" "/storage/volume/${IXBUILD_ROOT_ZVOL}/datasets/" '{ "name": "jails" }'
  check_rest_response "201 Created" || return 1

  # Set the permissions of the dataset 01/20
  echo_test_title "Changing permissions on /mnt/${IXBUILD_ROOT_ZVOL}/share"
  rest_request "PUT" "/storage/permission/" '{ "mp_path": "/mnt/'${IXBUILD_ROOT_ZVOL}'/share", "mp_acl": "unix", "mp_mode": "777", "mp_user": "root", "mp_group": "wheel" }'
  check_rest_response "201 Created" || return 1

  # Set the permissions of the dataset 02/20
  echo_test_title "Changing permissions on /mnt/${IXBUILD_ROOT_ZVOL}/jails"
  rest_request "PUT" "/storage/permission/" '{ "mp_path": "/mnt/'${IXBUILD_ROOT_ZVOL}'/jails", "mp_acl": "unix", "mp_mode": "777", "mp_user": "root", "mp_group": "wheel" }'
  check_rest_response "201 Created" || return 1


  local DATASET_CNT=20
  for count in $(seq -f "%02g" 3 $DATASET_CNT)
  do
    echo_test_title "Creating dataset ${count}/${DATASET_CNT} ${IXBUILD_ROOT_ZVOL}/dataset${count}"
    rest_request "POST" "/storage/volume/${IXBUILD_ROOT_ZVOL}/datasets/" '{ "name": "dataset'"${count}"'" }'
    check_rest_response "201 Created" || return 1

    echo_test_title "Changing permissions on /mnt/${IXBUILD_ROOT_ZVOL}/dataset${count}"
    rest_request "PUT" "/storage/permission/" '{ "mp_path": "/mnt/'${IXBUILD_ROOT_ZVOL}'/dataset'"${count}"'", "mp_acl": "unix", "mp_mode": "777", "mp_user": "root", "mp_group": "wheel" }'
    check_rest_response "201 Created" || return 1
  done

  # Check creating a ZFS snapshot
  echo_test_title "Creating a ZFS snapshot ${IXBUILD_ROOT_ZVOL}@test"
  rest_request "POST" "/storage/snapshot/" '{ "dataset": "'${IXBUILD_ROOT_ZVOL}'", "name": "test" }'
  check_rest_response "201 Created" || return 1

  # Create a dataset for testing snapshot
  echo_test_title "Creating dataset for testing snapshot rollback ${IXBUILD_ROOT_ZVOL}/snapcheck"
  rest_request "POST" "/storage/volume/${IXBUILD_ROOT_ZVOL}/datasets/" '{ "name": "snapcheck" }'
  check_rest_response "201 Created" || return 1

  # Check creating a ZVOL 1/2
  echo_test_title "Creating a ZVOL 1/2"
  rest_request "POST" "/storage/volume/${IXBUILD_ROOT_ZVOL}/zvols/" '{ "name": "testzvol1", "volsize": "10M" }'
  check_rest_response "201" || return 1

  # Check creating a ZVOL 2/2
  echo_test_title "Creating a ZVOL 2/2"
  rest_request "POST" "/storage/volume/${IXBUILD_ROOT_ZVOL}/zvols/" '{ "name": "testzvol2", "volsize": "10M" }'
  check_rest_response "201" || return 1

  return 0
}

# Init function, this is called after module is sourced
# Pre-Set variables
# TESTSET = ( SMOKE / COMPLETE / BENCHMARK )
storage_init()
{
  # Run all the storage tests
  case $TESTSET in
        SMOKE) storage_tests ; return $? ;;
     COMPLETE) storage_tests ; return $? ;;
    BENCHMARK) storage_tests ; return $? ;;
            *) storage_tests ; return $? ;;
  esac
}
