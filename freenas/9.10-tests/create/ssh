#!/usr/bin/env bash
# Author: Kris Moore
# License: BSD
# Location for tests into REST API of FreeNAS
# Resty Docs: https://github.com/micha/resty
# jsawk: https://github.com/micha/jsawk

# List the other modules which must be run before this module can execute
REQUIRES="network"
export REQUIRES

# Run a series of tests on the ssh settings
# We also leave it enabled, so we have access to VM if something hangs / goes wrong
ssh_tests()
{
  local ssh_keypath="${HOME}/.ssh/id_rsa"

  set_test_group_text "1 - Create - SSH Tests" "5"
  CLASSNAME=ixbuild.resty.functional.create.ssh

  echo_test_title "Configuring SSH settings"
  rest_request "PUT" "/services/ssh/" '{ "ssh_rootlogin": true }'
  check_rest_response "200 OK"

  echo_test_title "Enabling SSH Service"
  rest_request "PUT" "/services/services/ssh/" '{ "srv_enable": true }'
  check_rest_response "200 OK"

  echo_test_title "Checking to see if SSH service is enabled"
  rest_request "GET" "/services/services/ssh/"
  check_service_status "RUNNING"

  echo_test_title "Ensure that we have a running ssh-agent"
  # Could not open a connection to your authentication agent.
  ssh-add -L 2>&1 | \
    grep -q -e "Error connecting to agent" -e "Could not open a connection to your authentication agent." \
    && echo_fail && return 1 || echo_ok

  # Grab the path if an RSA key already exists and is ready to use
  if ssh-add -L 2>&1 | grep -q "^ssh-rsa" ; then
    #ssh_keypath=$(ssh-add -L | awk '$1 == "ssh-rsa" {print $3}' | head -n 1)
    ssh_keypath=$(ls -d -1 ~/.ssh/*id_rsa)
  else
    # Use id_rsa.tests key if it exists, otherwise use the id_rsa key
    if [ -f "${HOME}/.ssh/id_rsa.tests" ] ; then
      ssh_keypath="${HOME}/.ssh/id_rsa.tests"
    elif [ ! -f "${ssh_keypath}" ] ; then
      # Create the id_rsa key if it does not already exist
      ssh-keygen -b 4096 -t rsa -q -N "" -f "${ssh_keypath}" >/dev/null 2>/dev/null
    fi
    # Add whichever key, id_rsa or id_rsa.tests to our ssh-agent
    ssh-add "${ssh_keypath}" >/dev/null 2>/dev/null
  fi

  # Get the root user id so we can add ssh keys to the test target
  rest_request "GET" "/account/users/"
  local root_user_id=$(cat $RESTYOUT | ${JSAWK} -n 'if (this.bsdusr_username == "root") { out(this.id) }')
  #local ssh_pubkey="$(cat "${ssh_keypath}".pub)"
  local ssh_pubkey="$(cat ${HOME}/.ssh/test_id_rsa.pub)"

  echo_test_title "Adding SSH public key from the executor to the root user account"
  if [ -n "$root_user_id" -a -n "$ssh_pubkey" ]; then
    rest_request "PUT" "/account/users/${root_user_id}/" '{ "bsdusr_sshpubkey": "'"${ssh_pubkey}"'" }'
    check_rest_response "200"
  else
    echo_fail
    return 1
  fi

  return 0
}

# Init function, this is called after module is sourced
# Pre-Set variables
# TESTSET = ( SMOKE / COMPLETE / BENCHMARK )
ssh_init()
{
  # Run all the storage tests
  case $TESTSET in
        SMOKE) ssh_tests ;;
     COMPLETE) ssh_tests ;;
    BENCHMARK) ;;
            *) ssh_tests ;;
  esac
}
