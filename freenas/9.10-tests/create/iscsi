#!/usr/bin/env bash
# Author: Kris Moore
# License: BSD
# Location for tests into REST API of FreeNAS 9.10
# Resty Docs: https://github.com/micha/resty
# jsawk: https://github.com/micha/jsawk

# List the other modules which must be run before this module can execute
REQUIRES="storage"
export REQUIRES

iscsi_tests()
{
  local MOUNTPOINT="/tmp/iscsi-mnt.$$"

  # Set the group text and number of tests
  set_test_group_text "1 - Create - iSCSI tests" "24"
  CLASSNAME=ixbuild.resty.functional.create.iscsi

  # TODO - Find correct process name on test executor
  #ps -aux | grep -q "[i]scsid"
  #if [ $? -ne 0 ]; then
  #  echo -n "iSCSI service does not appear to be running."
  #  echo_skipped
  #  return 0
  #fi

  # Clean up any leftover items from any previous failed runs
  rest_request "PUT" "/services/services/iscsitarget/" '{ "srv_enable": "false" }'
  iscsictl -R -a
  umount -A &>/dev/null
  rmdir /tmp/iscsi-mnt.* &>/dev/null

  # Add iSCSI initator
  echo_test_title "Add iSCSI initiator"
  rest_request "POST" "/services/iscsi/authorizedinitiator/" '{ "id": 1, "iscsi_target_initiator_auth_network": "ALL", "iscsi_target_initiator_comment": "", "iscsi_target_initiator_initiators": "ALL", "iscsi_target_initiator_tag": 1 }'
  check_rest_response "201 Created"

  # Add iSCSI portal
  echo_test_title "Add iSCSI portal"
  rest_request "POST" "/services/iscsi/portal/" '{ "iscsi_target_portal_ips": ["0.0.0.0:3620"] }'
  check_rest_response "201 Created"

  # Add iSCSI target
  echo_test_title "Add iSCSI target"
  rest_request "POST" "/services/iscsi/target/" '{ "iscsi_target_name": "iqn.2005-10.org.freenas.ctl:target0"}'
  check_rest_response "201 Created"

  # Add Target to groups
  echo_test_title "Add target to groups"
  rest_request "POST" "/services/iscsi/targetgroup/" '{ "iscsi_target": "1", "iscsi_target_authgroup": null, "iscsi_target_portalgroup": 1, "iscsi_target_initiatorgroup": "1", "iscsi_target_authtype": "None", "iscsi_target_initialdigest": "Auto" }'
  check_rest_response "201 Created"
  
  # Add iSCSI extent
  echo_test_title "Add iSCSI extent"
  rest_request "POST" "/services/iscsi/extent/" '{ "iscsi_target_extent_type": "File", "iscsi_target_extent_name": "extent", "iscsi_target_extent_filesize": "50MB", "iscsi_target_extent_rpm": "SSD", "iscsi_target_extent_path": "/mnt/tank/dataset03/iscsi" }'
  check_rest_response "201 Created"

  # Associate iSCSI target
  echo_test_title "Associate iSCSI target"
  rest_request "POST" "/services/iscsi/targettoextent/" '{ "id": "1", "iscsi_extent": "1", "iscsi_lunid": null, "iscsi_target": "1" }'
  check_rest_response "201 Created"

  # Enable the iSCSI service
  echo_test_title "Enable iSCSI service"
  rest_request "PUT" "/services/services/iscsitarget/" '{ "srv_enable": "true" }'
  check_rest_response "200 OK"

  echo_test_title "Verify the iSCSI service is enabled"
  rest_request "GET" "/services/services/iscsitarget/"
  check_service_status "RUNNING"

  return 0

  echo_test_title "Poll VM to ensure iSCSI service is up and running"
  wait_for_avail_port "3260"
  check_exit_status || return 1

  # Now connect to iSCSI target
  echo_test_title "Connecting to iSCSI target"
  rc_test "iscsictl -A -p ${ip}:3620 -t iqn.2005-10.org.freenas.ctl:target0" || return 1

  echo_test_title "Waiting for iscsi connection before grabbing device name"
  # -w[aits] 30 seconds before timing out, holding for all iscsi connections to
  # have been established before -L[isting] results
  rc_test "iscsictl -L -w 30" || return 1

  # Get the device for the connect target
  local iscsi_devname=`iscsictl -L | awk '$2 == "'${ip}':3620" && $3 == "Connected:" {print $4}'`

  echo_test_title "Ensure we have the iSCSI device name"
  test -n "${iscsi_devname}" && ls "/dev/${iscsi_devname}" >/dev/null
  check_exit_status || return 1

  echo_test_title "Format the target volume"
  rc_test "newfs /dev/${iscsi_devname}" || return 1

  echo_test_title "Creating iSCSI mountpoint"
  rc_test "mkdir '${MOUNTPOINT}'" || return 1

  echo_test_title "Mount the target volume"
  rc_test "mount '/dev/${iscsi_devname}' '${MOUNTPOINT}'" || return 1

  echo_test_title "Creating file"
  rc_test "touch '${MOUNTPOINT}/testfile'" "umount '${MOUNTPOINT}'; rmdir '${MOUNTPOINT}'" || return 1

  echo_test_title "Moving file"
  rc_test "mv '${MOUNTPOINT}/testfile' '${MOUNTPOINT}/testfile2'" || return 1

  echo_test_title "Copying file"
  rc_test "cp '${MOUNTPOINT}/testfile2' '${MOUNTPOINT}/testfile'" || return 1

  echo_test_title "Deleting file"
  rc_test "rm '${MOUNTPOINT}/testfile2'" || return 1

  echo_test_title "Unmounting iSCSI volume"
  rc_test "umount '${MOUNTPOINT}'" || return 1

  echo_test_title "Removing iSCSI volume mountpoint"
  rc_test "rmdir '${MOUNTPOINT}'" || return 1

  echo_test_title "Disconnect all targets"
  rc_test "iscsictl -R -a" || return 1

  # Disable the iSCSI service
  echo_test_title "Disable iSCSI service"
  rest_request "PUT" "/services/services/iscsitarget/" '{ "srv_enable": "false" }'
  check_rest_response "200 OK"

  echo_test_title "Verify the iSCSI service is disabled"
  rest_request "GET" "/services/services/iscsitarget/"
  check_service_status "STOPPED"
}

# Init function, this is called after module is sourced
# Pre-Set variables
# TESTSET = ( SMOKE / COMPLETE / BENCHMARK )
iscsi_init()
{
  # Run all the storage tests
  case $TESTSET in
        SMOKE) iscsi_tests ;;
     COMPLETE) iscsi_tests ;;
    BENCHMARK) ;;
            *) iscsi_tests ;;
  esac
}
